{"version":3,"sources":["api/userApi.js","actions/actionTypes.js","actions/userActions.js","components/MenuBar.js","actions/pageChangeActions.js","components/SidePanel.js","components/APIPanel.js","pages/ApiPage.js","pages/DashboardPage.js","api/projectApi.js","actions/projectActions.js","components/ConfirmDeleteDialog.js","pages/ProjectDetailPage.js","components/ProjectCard.js","pages/AllProjectsPage.js","pages/ProjectsPageWrapper.js","pages/WelcomePage.js","components/Login.js","components/Register.js","pages/LoginPage.js","pages/Main.js","App.js","serviceWorker.js","reducers/initialState.js","reducers/userReducer.js","reducers/projectReducer.js","reducers/rootReducer.js","reducers/pageChangeReducer.js","index.js","store/configureStore.js"],"names":["UserApi","username","password","fetch","method","body","JSON","stringify","headers","then","response","json","data","catch","error","user","project","GET_ALL_PROJECTS_LOADING","GET_ALL_PROJECTS_FAILURE","GET_ALL_PROJECTS_SUCCESS","GET_PROJECT_LOADING","GET_PROJECT_FAILURE","GET_PROJECT_SUCCESS","CREATE_PROJECT_LOADING","CREATE_PROJECT_FAILURE","CREATE_PROJECT_SUCCESS","DELETE_PROJECT_LOADING","DELETE_PROJECT_FAILURE","DELETE_PROJECT_SUCCESS","currentPage","PAGE_CHANGED","logInLoading","type","logInFailure","payload","logInSuccess","userData","logOutSuccess","useStyles","makeStyles","theme","root","display","appBar","zIndex","drawer","menuButton","marginRight","spacing","login","textTransform","title","flexGrow","content","padding","toolbar","mixins","connect","state","info","isAuthenticated","undefined","token","dispatch","logOutUser","getState","props","classes","AppBar","position","className","Toolbar","Typography","variant","Equalizer","align","Link","color","underline","to","component","RouterLink","Button","onClick","event","setCurrentPage","index","width","flexShrink","drawerPaper","ListItemLink","icon","primary","selected","renderLink","React","useMemo","forwardRef","itemProps","ref","innerRef","ListItem","button","ListItemIcon","ListItemText","icons","DeveloperBoard","Assignment","Code","Info","selectedIndex","Drawer","open","paper","List","map","text","key","toLowerCase","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","SimpleExpansionPanel","id","name","description","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","changePage","setCurrentPageAction","Container","console","log","renderRedirect","rel","href","Divider","Grid","container","direction","justify","alignItems","item","xs","colorType","colorDomain","colorRange","margin","top","getLabel","d","angle","labelsRadiusMultiplier","labelsStyle","fill","showLabels","style","stroke","strokeWidth","height","items","x","y","ProjectApi","Authorization","getToken","getAllProjectsLoading","getAllProjectsFailure","getAllProjectsSuccess","projects","getProjectLoading","getProjectFailure","getProjectSuccess","createProjectLoading","createProjectFailure","ConfirmDeleteDialog","handleClose","onClose","handleContinue","onContinue","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","tableIcons","Add","AddBox","Check","Clear","Delete","DeleteOutline","DetailPanel","ChevronRight","Edit","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","ResetSearch","Search","SortArrow","ArrowUpward","ThirdStateCheck","Remove","ViewColumn","input","fab","codeBlock","fontFamily","ownProps","find","element","project_id","getProject","projectApi","getProjectAction","useTheme","useEffect","useState","newName","setNewName","newDesc","setNewDesc","editOpen","setEditOpen","saveNeeded","setSaveNeeded","wantsDelete","setWantsDelete","setConfirmDelete","transitionDuration","enter","transitions","duration","enteringScreen","exit","leavingScreen","handleChange","target","value","fabs","editBar","red","label","size","initial","Save","green","Cancel","TextField","fullWidth","onChange","Grow","in","timeout","unmountOnExit","Tooltip","Fab","aria-label","backgroundColor","columns","field","time","Date","desc","nest","one","two","sup","options","search","detailPanel","tooltip","render","rowData","Paper","renderDataRow","level","tabs","i","push","Object","keys","onRowClick","togglePanel","card","minHeight","grey","subtitle","pos","marginBottom","ProjectCard","useRouteMatch","url","path","Card","CardActionArea","CardContent","gutterBottom","getProjects","getAllProjects","addProject","createProject","addNewProjectAction","setOpen","projName","setProjName","projDesc","setProjDesc","multiline","disabled","exact","children","match","params","maxWidth","minWidth","media","demo","palette","background","marginLeft","CardMedia","image","CheckCircleOutline","flexWrap","textField","dense","marginTop","menu","loading","logInUser","userApi","logInUserAction","setUsername","setPassword","autoComplete","preventDefault","Fade","transitionDelay","LinearProgress","RegisterTextField","Register","email","verifyPassword","canlogin","bind","this","setState","Component","LoginPage","MainPage","CssBaseline","App","Boolean","window","location","hostname","metrics","userReducer","initialState","action","assign","removeProject","arr","findIndex","equals","splice","rootReducer","combineReducers","types","store","createStore","applyMiddleware","thunk","subscribe","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.da205517.chunk.js","sourcesContent":["class UserApi {\n    static logInUser( username, password ) {\n        return fetch('login/', {\n            method: 'POST',\n            body: JSON.stringify({\n              username: username,\n              password: password\n            }),\n            headers: {\n              'Content-Type': 'application/json'\n            }\n        })\n        .then(response => response.json()) \n        .then(data => {\n            return (\n                data\n            )\n        })\n        .catch(error => { return error })\n    }\n}\n\nexport default UserApi","// User Action Types\nexport const user = {\n  LOG_IN_LOADING: 'LOG_IN_LOADING',\n  LOG_IN_FAILURE: 'LOG_IN_FAILURE',\n  LOG_IN_SUCCESS: 'LOG_IN_SUCCESS',\n\n  LOG_OUT_LOADING: 'LOG_OUT_LOADING',\n  LOG_OUT_FAILURE: 'LOG_OUT_FAILURE',\n  LOG_OUT_SUCCESS: 'LOG_OUT_SUCCESS',\n};\n\n// Project Action Types\nexport const project = {\n  GET_ALL_PROJECTS_LOADING: 'GET_ALL_PROJECTS_LOADING',\n  GET_ALL_PROJECTS_FAILURE: 'GET_ALL_PROJECTS_FAILURE',\n  GET_ALL_PROJECTS_SUCCESS: 'GET_ALL_PROJECTS_SUCCESS',\n\n  GET_PROJECT_LOADING: 'GET_PROJECT_LOADING',\n  GET_PROJECT_FAILURE: 'GET_PROJECT_FAILURE',\n  GET_PROJECT_SUCCESS: 'GET_PROJECT_SUCCESS',\n\n  CREATE_PROJECT_LOADING: 'CREATE_PROJECT_LOADING',\n  CREATE_PROJECT_FAILURE: 'CREATE_PROJECT_FAILURE',\n  CREATE_PROJECT_SUCCESS: 'CREATE_PROJECT_SUCCESS',\n\n  DELETE_PROJECT_LOADING: 'DELETE_PROJECT_LOADING',\n  DELETE_PROJECT_FAILURE: 'DELETE_PROJECT_FAILURE',\n  DELETE_PROJECT_SUCCESS: 'DELETE_PROJECT_SUCCESS',\n};\n\n// Metric Action Types\nexport const metric = {\n  GET_ALL_METRICS_LOADING: 'GET_ALL_METRICS_LOADING',\n  GET_ALL_METRICS_FAILURE: 'GET_ALL_METRICS_FAILURE',\n  GET_ALL_METRICS_SUCCESS: 'GET_ALL_METRICS_SUCCESS',\n\n  CREATE_METRIC_LOADING: 'CREATE_METRIC_LOADING',\n  CREATE_METRIC_FAILURE: 'CREATE_METRIC_FAILURE',\n  CREATE_METRIC_SUCCESS: 'CREATE_METRIC_SUCCESS',\n\n  GET_METRIC_LOADING: 'GET_METRIC_LOADING',\n  GET_METRIC_FAILURE: 'GET_METRIC_FAILURE',\n  GET_METRIC_SUCCESS: 'GET_METRIC_SUCCESS',\n\n  DELETE_METRIC_LOADING: 'DELETE_METRIC_LOADING',\n  DELETE_METRIC_FAILURE: 'DELETE_METRIC_FAILURE',\n  DELETE_METRIC_SUCCESS: 'DELETE_METRIC_SUCCESS',\n}\n\n// Page Selection\nexport const currentPage = {\n  PAGE_CHANGED: 'PAGE_CHANGED',\n};\n","import userApi from '../api/userApi.js';\nimport {user as type} from './actionTypes';\n\nexport const logInUser = (username, password) => {\n  return (dispatch, getState) => {\n    dispatch (logInLoading (true));\n\n    userApi\n      .logInUser (username, password)\n      .then (userData => {\n        dispatch (logInSuccess (userData));\n      })\n      .catch (error => {\n        dispatch (logInFailure (error));\n        throw error;\n      });\n  };\n};\n\nexport const logInLoading = () => {\n  return {\n    type: type.LOG_IN_LOADING,\n  };\n};\n\nexport const logInFailure = error => {\n  return {\n    type: type.LOG_IN_FAILURE,\n    payload: {error},\n  };\n};\n\nexport const logInSuccess = userData => {\n  return {\n    type: type.LOG_IN_SUCCESS,\n    payload: {userData},\n  };\n};\n\nexport const logOutUser = () => {\n  return (dispatch, getState) => {\n    dispatch (logOutSuccess ());\n  };\n};\n\nexport const logOutSuccess = () => {\n  return {type: type.LOG_OUT_SUCCESS};\n};\n","import React from 'react';\nimport {Link as RouterLink} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {logOutUser as logOutUserAction} from '../actions/userActions';\nimport {\n  makeStyles,\n  AppBar,\n  Toolbar,\n  Typography,\n  Button,\n  Link,\n} from '@material-ui/core';\n\nimport {Equalizer} from '@material-ui/icons';\n\nconst useStyles = makeStyles (theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing (2),\n  },\n  login: {\n    textTransform: \"none\",\n  },\n  title: {\n    flexGrow: 1,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing (3),\n  },\n  toolbar: theme.mixins.toolbar,\n}));\n\nexport const MenuBar = props => {\n  const classes = useStyles ();\n\n  const handleLogout = event => {\n    if (props.isAuthenticated) {\n      props.logOutUser ();\n    }\n  };\n\n  return (\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar>\n        <Typography variant=\"h6\" className={classes.menuButton}>\n          <Equalizer />\n        </Typography>\n        <Typography align=\"left\" variant=\"h6\" className={classes.title}>\n          Arctic Thunder Metrics\n        </Typography>\n        <Link\n          color=\"inherit\"\n          underline=\"none\"\n          to={`/login`}\n          component={RouterLink}\n        >\n          <Button variant=\"outlined\" color=\"inherit\" onClick={handleLogout} className={classes.login}>\n            {' '}{props.isAuthenticated ? 'Logout' : 'Login or Register'}{' '}\n          </Button>\n        </Link>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\n// Link Redux user object to dialog\nconst mapStateToProps = state => {\n  const {user} = state;\n  return {\n    user: user.info,\n    isAuthenticated: user.info.token !== undefined,\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  logOutUser () {\n    dispatch (logOutUserAction ());\n  },\n});\n\nexport default connect (mapStateToProps, mapDispatchToProps) (MenuBar);\n","import {currentPage as type} from './actionTypes';\n\n// Get all projects\nexport const setCurrentPage = index => {\n  return {\n    type: type.PAGE_CHANGED,\n    payload: {index},\n  };\n};\n","import React, {useEffect, useState} from 'react';\nimport {Link as RouterLink} from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\nimport {\n  makeStyles,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  Drawer,\n} from '@material-ui/core';\n\nimport {DeveloperBoard, Assignment, Code, Info} from '@material-ui/icons';\n\nimport {connect} from 'react-redux';\nimport {\n  setCurrentPage as setCurrentPageAction,\n} from '../actions/pageChangeActions';\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles (theme => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  toolbar: theme.mixins.toolbar,\n}));\n\nfunction ListItemLink (props) {\n  const {icon, primary, to, selected, onClick} = props;\n\n  const renderLink = React.useMemo (\n    () =>\n      React.forwardRef (\n        (\n          itemProps,\n          ref\n        ) => // With react-router-dom@^6.0.0 use `ref` instead of `innerRef`\n        // See https://github.com/ReactTraining/react-router/issues/6056\n        <RouterLink to={to} {...itemProps} innerRef={ref} />\n      ),\n    [to]\n  );\n\n  return (\n    <li>\n      <ListItem\n        button\n        component={renderLink}\n        selected={selected}\n        onClick={onClick}\n      >\n        {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\n        <ListItemText primary={primary} />\n      </ListItem>\n    </li>\n  );\n}\n\nListItemLink.propTypes = {\n  icon: PropTypes.element,\n  primary: PropTypes.string.isRequired,\n  to: PropTypes.string.isRequired,\n};\n\nconst SidePanel = props => {\n  const pages = ['Dashboard', 'Projects', 'API', 'About'];\n  const icons = [<DeveloperBoard />, <Assignment />, <Code />, <Info />];\n\n  const handleListItemClick = (event, index) => {\n    // props.setSelectedIndex(index)\n  };\n\n  const selectedIndex = props.currentPage;\n  const classes = useStyles ();\n\n  return (\n    <Drawer\n      className={classes.drawer}\n      variant=\"persistent\"\n      open={props.isAuthenticated}\n      classes={{\n        paper: classes.drawerPaper,\n      }}\n    >\n      <div className={classes.toolbar} />\n      <List>\n        {pages.map ((text, index) => (\n          <ListItemLink\n            key={index}\n            selected={selectedIndex === index}\n            onClick={event => handleListItemClick (event, index)}\n            to={'/' + text.toLowerCase ()}\n            primary={text}\n            icon={icons[index]}\n          />\n        ))}\n      </List>\n    </Drawer>\n  );\n};\n\n// Link Redux user object to dialog\nconst mapStateToProps = state => {\n  const {user} = state;\n  return {\n    user: user.info,\n    isAuthenticated: user.info.token !== undefined,\n    currentPage: state.currentPage.index,\n  };\n};\n\nexport default connect (mapStateToProps) (SidePanel);\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst useStyles = makeStyles (theme => ({\n  root: {\n    width: '100%',\n    padding: 8,\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem (15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\n\nexport default function SimpleExpansionPanel (props) {\n  const {id, name, description} = props;\n  const classes = useStyles ();\n\n  return (\n    <div className={classes.root}>\n      <ExpansionPanel>\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography className={classes.heading}>{name}</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <Typography>\n            {description}\n          </Typography>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </div>\n  );\n}\n","import React from 'react';\nimport {Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {\n  setCurrentPage as setCurrentPageAction,\n} from '../actions/pageChangeActions';\nimport {Container} from '@material-ui/core';\n\nimport APIPanel from '../components/APIPanel';\n\nexport function ApiPage (props) {\n  const apidata = [\n    {name: '/api/new_user/', description: 'POST: Create User'},\n    {name: '/api/login/', description: 'POST: Login User'},\n    {\n      name: '/api/projects/{{project_id}}/',\n      description: 'GET: Get Project ; DEL: Delete Project',\n    },\n\n    {\n      name: '/api/projects/{{project_id}}/metrics',\n      description: 'GET: Get All Metrics For Project ; POST: Add New Metric To Project',\n    },\n    {\n      name: '/api/projects/{{project_id}}/metrics/{{metric_id}}/',\n      description: 'GET: Get Metric ; DEL: Delete Metric',\n    },\n  ];\n\n  const renderRedirect = () => {\n    if (!props.isAuthenticated) {\n      console.log ('Redirect Loaded');\n      return <Redirect to=\"/login\" />;\n    }\n  };\n\n  props.changePage (2);\n\n  return (\n    <Container className=\"api\">\n      {renderRedirect ()}\n      {apidata.map ((data, index) => (\n        <APIPanel name={data.name} description={data.description} key={index} />\n      ))}\n    </Container>\n  );\n}\n\nconst mapStateToProps = state => {\n  const {user} = state;\n  return {\n    isAuthenticated: user.info.token !== undefined,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changePage: index => dispatch (setCurrentPageAction (index)),\n  };\n};\n\nexport default connect (mapStateToProps, mapDispatchToProps) (ApiPage);\n","import React from 'react';\nimport {Typography, Divider, Grid} from '@material-ui/core';\nimport {Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {\n  setCurrentPage as setCurrentPageAction,\n} from '../actions/pageChangeActions';\nimport {\n  RadialChart,\n  XAxis,\n  YAxis,\n  XYPlot,\n  HorizontalGridLines,\n  LineSeries,\n} from 'react-vis';\nimport DiscreteColorLegend from 'react-vis/dist/legends/discrete-color-legend';\n\nexport const DashboardPage = props => {\n  const data = [{x: 0, y: 8}, {x: 1, y: 5}, {x: 2, y: 4}];\n  const items = [\n    {title: 'Project 1', color: '#f9c116', stroke: '#fff', strokeWidth: '2'},\n    {title: 'Project 2', color: '#006600', stroke: '#fff', strokeWidth: '2'},\n    {title: 'Project 3', color: '#1E96BE', stroke: '#fff', strokeWidth: '2'},\n    {title: 'Project 4', color: '#4c85ff', stroke: '#fff', strokeWidth: '2'},\n    {title: 'Project 5', color: '#f99416', stroke: '#fff', strokeWidth: '2'},\n  ];\n  const renderRedirect = () => {\n    if (!props.isAuthenticated) {\n      console.log ('Redirect Loaded');\n      return <Redirect to=\"/login\" />;\n    }\n  };\n\n  props.changePage (0);\n\n  return (\n    <section className=\"dashboard\">\n      {renderRedirect ()}\n      <link\n        rel=\"stylesheet\"\n        href=\"https://unpkg.com/react-vis/dist/style.css\"\n      />\n      <Typography variant=\"h5\" align=\"left\">Your Dashboard</Typography>\n      <br />\n      <Divider />\n      <br />\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <Grid item xs=\"3\">\n          <Typography variant=\"h6\" align=\"left\">Metrics by Projects</Typography>\n          <RadialChart\n            colorType={'literal'}\n            colorDomain={[0, 100]}\n            colorRange={[0, 10]}\n            margin={{top: 100}}\n            getLabel={d => d.name}\n            data={[\n              {angle: 1, color: '#f9c116'},\n              {angle: 2, color: '#006600'},\n              {angle: 5, color: '#1E96BE'},\n              {angle: 3, color: '#4c85ff'},\n              {angle: 5, color: '#f99416'},\n            ]}\n            labelsRadiusMultiplier={1.1}\n            labelsStyle={{fontSize: 12, fill: '#222'}}\n            showLabels\n            style={{stroke: '#fff', strokeWidth: 2}}\n            width={400}\n            height={300}\n          />\n        </Grid>\n\n        <Grid item xs=\"3\">\n          <DiscreteColorLegend height={300} width={100} items={items} />\n        </Grid>\n\n        <Grid item xs=\"6\">\n          <Typography variant=\"h6\" align=\"left\">Metrics Collected</Typography>\n          <XYPlot height={300} width={400}>\n            <HorizontalGridLines />\n            <XAxis />\n            <YAxis />\n            <LineSeries data={data} />\n          </XYPlot>\n        </Grid>\n      </Grid>\n    </section>\n  );\n};\n\nconst mapStateToProps = state => {\n  const {user} = state;\n  return {\n    isAuthenticated: user.info.token !== undefined,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changePage: index => dispatch (setCurrentPageAction (index)),\n  };\n};\n\nexport default connect (mapStateToProps, mapDispatchToProps) (DashboardPage);\n","class ProjectApi {\n  // Gets all projects\n  static getAllProjects (token) {\n    return fetch ('/projects/', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Token ${token}`,\n      },\n    })\n      .then (response => response.json ())\n      .then (data => {\n        return data;\n      })\n      .catch (error => {\n        return error;\n      });\n  }\n\n  // Gets a specific project\n  static getProject (token, id) {\n    return fetch (`/projects/${id}/`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Token ${token}`,\n      },\n    })\n      .then (response => response.json ())\n      .then (data => {\n        return data;\n      })\n      .catch (error => {\n        return error;\n      });\n  }\n\n  // Creates a new project\n  static createProject (token, name, description) {\n    return fetch ('/projects/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Token ${token}`,\n      },\n      body: JSON.stringify ({\n        name: name,\n        description: description,\n      }),\n    })\n      .then (response => response.json ())\n      .then (data => {\n        return data;\n      })\n      .catch (error => {\n        return error;\n      });\n  }\n\n  // Delete a project\n  static deleteProject (token, id) {\n    return fetch (`/projects/${id}/`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Token ${token}`,\n      },\n    })\n      .then (response => response.json ())\n      .then (data => {\n        return data;\n      })\n      .catch (error => {\n        return error;\n      });\n  }\n}\n\nexport default ProjectApi;\n","import projectApi from '../api/projectApi';\nimport {project as type} from './actionTypes';\n\nconst getToken = getState => {\n  return getState ().user.info.token;\n};\n\n// Get all projects\nexport const getAllProjects = () => {\n  return (dispatch, getState) => {\n    dispatch (getAllProjectsLoading ());\n\n    projectApi\n      .getAllProjects (getToken(getState))\n      .then (projects => {\n        dispatch (getAllProjectsSuccess (projects));\n      })\n      .catch (error => {\n        dispatch (getAllProjectsFailure (error));\n        throw error;\n      });\n  };\n};\n\nexport const getAllProjectsLoading = () => {\n  return {\n    type: type.GET_ALL_PROJECTS_LOADING,\n  };\n};\n\nexport const getAllProjectsFailure = error => {\n  return {\n    type: type.GET_ALL_PROJECTS_FAILURE,\n    payload: {error},\n  };\n};\nexport const getAllProjectsSuccess = projects => {\n  return {\n    type: type.GET_ALL_PROJECTS_SUCCESS,\n    payload: {projects},\n  };\n};\n\n// Get specific project\nexport const getProject = id => {\n  return (dispatch, getState) => {\n    dispatch (getProjectLoading ());\n\n    projectApi\n      .getProject (getToken (getState), id)\n      .then (project => {\n        dispatch (getProjectSuccess (project));\n      })\n      .catch (error => {\n        dispatch (getProjectFailure (error));\n        throw error;\n      });\n  };\n};\n\nexport const getProjectLoading = () => {\n  return {\n    type: type.GET_PROJECT_LOADING,\n  };\n};\n\nexport const getProjectFailure = error => {\n  return {\n    type: type.GET_PROJECT_FAILURE,\n    payload: {error},\n  };\n};\n\nexport const getProjectSuccess = project => {\n  return {\n    type: type.GET_PROJECT_SUCCESS,\n    payload: {project},\n  };\n};\n\n// Create new project\nexport const createProject = (name, description) => {\n  return (dispatch, getState) => {\n    dispatch (createProjectLoading ());\n\n    projectApi\n      .createProject (getToken (getState), name, description)\n      .then (project => {\n        dispatch (getProjectSuccess (project));\n      })\n      .catch (error => {\n        dispatch (createProjectFailure (error));\n        throw error;\n      });\n  };\n};\n\nexport const createProjectLoading = () => {\n  return {\n    type: type.CREATE_PROJECT_LOADING,\n  };\n};\n\nexport const createProjectFailure = error => {\n  return {\n    type: type.CREATE_PROJECT_FAILURE,\n    payload: {error},\n  };\n};\n\nexport const createProjectSuccess = project => {\n  return {\n    type: type.CREATE_PROJECT_SUCCESS,\n    payload: {project},\n  };\n};\n\n// Delete a project\nexport const deleteProject = id => {\n  return (dispatch, getState) => {\n    dispatch (deleteProjectLoading ());\n\n    projectApi\n      .deleteProject (getToken (getState), id)\n      .then (project => {\n        dispatch (deleteProjectSuccess (project));\n      })\n      .catch (error => {\n        dispatch (deleteProjectFailure (error));\n        throw error;\n      });\n  };\n};\n\nexport const deleteProjectLoading = () => ({\n  type: type.DELETE_PROJECT_LOADING,\n});\n\nexport const deleteProjectFailure = error => ({\n  type: type.DELETE_PROJECT_FAILURE,\n  payload: {error},\n});\n\nexport const deleteProjectSuccess = project => ({\n  type: type.DELETE_PROJECT_SUCCESS,\n  payload: {project},\n});\n","import React from 'react';\nimport {Dialog, DialogTitle, DialogActions, DialogContent, DialogContentText, Button} from '@material-ui/core';\n\nconst ConfirmDeleteDialog = props => {\n  const {title, open, description} = props;\n  const handleClose = props.onClose;\n  const handleContinue = props.onContinue;\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog--title\">{title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog--description\">\n          {description}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\" autoFocus>Cancel</Button>\n        <Button onClick={handleContinue} color=\"secondary\">Continue</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default ConfirmDeleteDialog;\n","import React, {forwardRef, useEffect, useState} from 'react';\nimport {\n  Typography,\n  Divider,\n  Grid,\n  Fab,\n  Grow,\n  Tooltip,\n  TextField,\n  Paper,\n} from '@material-ui/core';\n\nimport {\n  AddBox,\n  ArrowUpward,\n  Cancel,\n  Check,\n  ChevronLeft,\n  ChevronRight,\n  Clear,\n  Delete,\n  DeleteOutline,\n  Edit,\n  FilterList,\n  FirstPage,\n  LastPage,\n  Remove,\n  Save,\n  SaveAlt,\n  Search,\n  ViewColumn,\n} from '@material-ui/icons';\n\nimport MaterialTable from 'material-table';\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\nimport {red, green} from '@material-ui/core/colors';\n\nimport {connect} from 'react-redux';\nimport {getProject as getProjectAction} from '../actions/projectActions';\n\nimport ConfirmDeleteDialog from '../components/ConfirmDeleteDialog';\n\nconst tableIcons = {\n  Add: forwardRef ((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef ((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef ((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef ((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef ((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef ((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef ((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef ((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef ((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef ((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef ((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef ((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef ((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef ((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef ((props, ref) => <ArrowUpward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef ((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef ((props, ref) => <ViewColumn {...props} ref={ref} />),\n};\n\nconst useStyles = makeStyles (theme => ({\n  button: {\n    margin: theme.spacing (1),\n  },\n  input: {\n    display: 'none',\n  },\n  fab: {\n    margin: theme.spacing (1),\n  },\n  codeBlock: {\n    textTransform: 'none',\n    fontFamily: [\n      \"Courier\"\n    ]\n  },\n}));\n\nexport const ProjectDetailPage = props => {\n  const {project, project_id} = props;\n  const getProject = id => {\n    props.getProject (id);\n  };\n  const classes = useStyles ();\n  const theme = useTheme ();\n\n  useEffect (() => {\n    if (project === undefined) {\n      getProject (project_id);\n    }\n  }, []);\n\n  const {name, description} = project !== undefined\n    ? project\n    : {name: '', description: ''};\n\n  const [newName, setNewName] = useState (name);\n  const [newDesc, setNewDesc] = useState (description);\n  const [editOpen, setEditOpen] = useState (false);\n  const [saveNeeded, setSaveNeeded] = useState (false);\n  const [wantsDelete, setWantsDelete] = useState (false);\n  const [confirmDelete, setConfirmDelete] = useState (false);\n\n  const transitionDuration = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen,\n  };\n\n  const handleEditPress = () => {\n    setEditOpen (!editOpen);\n  };\n\n  const handleSavePress = () => {\n    setSaveNeeded (false);\n    setEditOpen (false);\n  };\n\n  const handleDeletePress = () => {\n    setWantsDelete (true);\n  };\n\n  const handleChange = event => {\n    event.target.id === 'name'\n      ? setNewName (event.target.value)\n      : setNewDesc (event.target.description);\n    setSaveNeeded (newName !== name || newDesc !== description);\n  };\n\n  const handleClose = () => {\n    setWantsDelete (!wantsDelete);\n  };\n\n  const handleContinue = () => {\n    setWantsDelete (!wantsDelete);\n    setConfirmDelete (true);\n  };\n\n  const renderDataRow = (data, level=0) => {\n    var tabs = []\n    for (var i = 0; i < level; i++) {\n      tabs.push('----- ')\n    }\n\n    return Object.keys (data).map (\n      (key, index) => {\n        return (\n          <div>\n            <Typography className={classes.codeBlock} key={level+index}>{tabs}{key}: {typeof data[key] !== 'object' ? data[key] : ''}</Typography>\n            {typeof data[key] === 'object' ? renderDataRow (data[key], level + 1) : ''}\n          </div> \n        )\n      }\n    );\n  };\n\n  const fabs = {\n    editBar: [\n      {\n        color: red[500],\n        className: classes.fab,\n        icon: <Delete />,\n        label: 'Delete',\n        size: 'small',\n        initial: false,\n        onClick: handleDeletePress,\n      },\n      {\n        className: classes.fab,\n        icon: <Save />,\n        label: 'Save',\n        size: 'small',\n        initial: false,\n        color: saveNeeded ? green[500] : null,\n        onClick: handleSavePress,\n      },\n      {\n        color: 'primary',\n        className: classes.fab,\n        icon: editOpen ? <Cancel /> : <Edit />,\n        label: editOpen ? 'Cancel' : 'Edit',\n        size: 'medium',\n        initial: true,\n        onClick: handleEditPress,\n      },\n    ],\n  };\n\n  const renderEditableText = () => {\n    if (editOpen) {\n      console.log ('Can Edit');\n      return (\n        <div>\n          <TextField\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Project Name\"\n            fullWidth\n            onChange={handleChange}\n          />\n          <TextField\n            margin=\"dense\"\n            id=\"description\"\n            label=\"Project Description\"\n            fullWidth\n            onChange={handleChange}\n          />\n        </div>\n      );\n    } else {\n      console.log (\"Can't Edit\");\n      return (\n        <div>\n          <Typography variant='h4' align=\"left\">{name}</Typography>\n          <Typography variant='body1' align=\"left\">{description}</Typography>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <section className=\"project-detail\">\n      <Grid container spacing={4} direction=\"column\" justify=\"flex-start\">\n        <Grid\n          container\n          item\n          direction=\"row\"\n          justify=\"space-between\"\n          alignItems=\"center\"\n        >\n          <Grid item>\n            {renderEditableText ()}\n          </Grid>\n          <Grid item>\n            {fabs.editBar.map ((fab, index) => (\n              <Grow\n                key={fab.color}\n                in={fab.initial || editOpen}\n                timeout={transitionDuration}\n                unmountOnExit\n              >\n                <Tooltip title={fab.label}>\n                  <Fab\n                    aria-label={fab.label}\n                    id={fab.label.toLowerCase ()}\n                    className={fab.className}\n                    size={fab.size}\n                    style={{\n                      backgroundColor: fab.color,\n                    }}\n                    onClick={fab.onClick}\n                  >\n                    {fab.icon}\n                  </Fab>\n                </Tooltip>\n              </Grow>\n            ))}\n            <ConfirmDeleteDialog\n              title=\"Delete Project\"\n              description=\"Are you sure you want to delete this project? This operation cannot be undone\"\n              open={wantsDelete}\n              onClose={handleClose}\n              onContinue={handleContinue}\n            />\n          </Grid>\n        </Grid>\n        <Grid item>\n          <Divider />\n        </Grid>\n        <Grid item>\n          <MaterialTable\n            title={`Metrics`}\n            columns={[\n              {title: 'Time', field: 'time', type: 'datetime'},\n              {title: 'Name', field: 'name'},\n              {title: 'Description', field: 'desc'},\n            ]}\n            data={[\n              {\n                time: Date (),\n                name: 'test1',\n                desc: 'description',\n                data: {name: 'example', type: 'whatever'},\n              },\n              {\n                time: Date (),\n                name: 'test2',\n                desc: 'description',\n                data: {type: 'metric', nest: {one: 'one', two: 'two'}, sup: \"bro\"},\n              },\n              {\n                time: Date (),\n                name: 'test3',\n                desc: 'description',\n                data: {type: 'metric'},\n              },\n              {\n                time: Date (),\n                name: 'test4',\n                desc: 'description',\n                data: {type: 'metric'},\n              },\n              {\n                time: Date (),\n                name: 'test5',\n                desc: 'description',\n                data: {type: 'metric'},\n              },\n              {\n                time: Date (),\n                name: 'test6',\n                desc: 'description',\n                data: {type: 'metric'},\n              },\n              {\n                time: Date (),\n                name: 'test7',\n                desc: 'description',\n                data: {type: 'metric'},\n              },\n              {\n                time: Date (),\n                name: 'test8',\n                desc: 'description',\n                data: {type: 'metric'},\n              },\n              {\n                time: Date (),\n                name: 'test9',\n                desc: 'description',\n                data: {type: 'metric'},\n              },\n              {\n                time: Date (),\n                name: 'test10',\n                desc: 'description',\n                data: {type: 'metric'},\n              },\n              {\n                time: Date (),\n                name: 'test11',\n                desc: 'description',\n                data: {type: 'metric'},\n              },\n              {\n                time: Date (),\n                name: 'test12',\n                desc: 'description',\n                data: {type: 'metric'},\n              },\n              {\n                time: Date (),\n                name: 'test13',\n                desc: 'description',\n                data: {type: 'metric'},\n              },\n              {\n                time: Date (),\n                name: 'test14',\n                desc: 'description',\n                data: {type: 'metric'},\n              },\n              {\n                time: Date (),\n                name: 'test15',\n                desc: 'description',\n                data: {type: 'metric'},\n              },\n              {\n                time: Date (),\n                name: 'test16',\n                desc: 'description',\n                data: {type: 'metric'},\n              },\n              {\n                time: Date (),\n                name: 'test17',\n                desc: 'description',\n                data: {type: 'metric'},\n              },\n            ]}\n            options={{search: false}}\n            detailPanel={[\n              {\n                tooltip: 'Metric Details',\n                render: rowData => {\n                  return (\n                    <div>\n                      <Paper>\n                        {renderDataRow (rowData.data)}\n                      </Paper>\n                    </div>\n                  );\n                },\n              },\n            ]}\n            onRowClick={(event, rowData, togglePanel) => togglePanel ()}\n            icons={tableIcons}\n          />\n        </Grid>\n      </Grid>\n    </section>\n  );\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const {projects} = state;\n\n  return {\n    project: projects.data.find (element => {\n      return element.id == ownProps.project_id;\n    }),\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getProject: id => dispatch (getProjectAction (id)),\n  };\n};\n\nexport default connect (mapStateToProps, mapDispatchToProps) (\n  ProjectDetailPage\n);\n","import React from 'react';\n\nimport {Link as RouterLink, useRouteMatch} from 'react-router-dom';\n\nimport {\n  makeStyles,\n  Card,\n  CardActionArea,\n  CardContent,\n  Typography,\n  Link,\n} from '@material-ui/core';\n\nimport {grey} from '@material-ui/core/colors';\n\nconst useStyles = makeStyles ({\n  card: {\n    width: 250,\n    minHeight: 1.1 * 275,\n    backgroundColor: grey[200],\n  },\n  title: {\n    fontSize: 18,\n  },\n  subtitle: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default function ProjectCard (props) {\n  const {id, name, description} = props.project;\n  const classes = useStyles ();\n  let {path, url} = useRouteMatch ();\n\n  return (\n    <Link underline=\"none\" to={`${url}/${id}`} component={RouterLink}>\n      <Card className={classes.card}>\n        <CardActionArea>\n          <CardContent className={classes.card}>\n            <Typography className={classes.title}>\n              {name}\n            </Typography>\n            <Typography\n              className={classes.subtitle}\n              color=\"textSecondary\"\n              gutterBottom\n            >\n              {description}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n      </Card>\n    </Link>\n  );\n}\n","import React, {useEffect, useState} from 'react';\n\nimport {connect} from 'react-redux';\nimport {\n  getAllProjects as getAllProjectsAction,\n  createProject as addNewProjectAction,\n} from '../actions/projectActions';\n\nimport {\n  makeStyles,\n  Grid,\n  Fab,\n  Typography,\n  Divider,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  TextField,\n  DialogActions,\n  Button,\n} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport ProjectCard from '../components/ProjectCard';\n\nconst useStyles = makeStyles (theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    fontSize: 24,\n  },\n  fab: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport const AllProjectsPage = props => {\n  const getProjects = () => {\n    props.getProjects ();\n  };\n  const addProject = (name, description) => {\n    props.addProject (name, description);\n  };\n  const [open, setOpen] = useState (false);\n\n  const [projName, setProjName] = useState ('');\n  const [projDesc, setProjDesc] = useState ('');\n\n  const classes = useStyles ();\n\n  useEffect (() => {\n    getProjects ();\n  }, []);\n\n  const projects = props.projects !== undefined ? props.projects : [];\n\n  const handleChange = event => {\n    switch (event.target.id) {\n      case 'name':\n        setProjName (event.target.value);\n        break;\n      case 'description':\n        setProjDesc (event.target.value);\n        break;\n      default:\n        console.log (`Invalid id: ${event.target.id}`);\n    }\n  };\n\n  const handleOpen = event => {\n    setOpen (true);\n  };\n\n  const handleClose = event => {\n    setOpen (false);\n  };\n\n  const handleSubmit = event => {\n    addProject (projName, projDesc);\n    setOpen (false);\n  };\n\n  return (\n    <section className=\"projects\">\n      <Grid container spacing={2} direction=\"column\">\n        <Grid\n          container\n          item\n          direction=\"row\"\n          justify=\"space-between\"\n          alignItems=\"center\"\n        >\n          <Grid item>\n            <Typography className={classes.title}>Your Projects</Typography>\n          </Grid>\n          <Grid item>\n            <Fab\n              variant=\"extended\"\n              color=\"primary\"\n              aria-label=\"new project\"\n              className={classes.fab}\n              onClick={handleOpen}\n            >\n              <AddIcon />\n            </Fab>\n\n            <Dialog\n              open={open}\n              onClose={handleClose}\n              aria-labelledby=\"from-dialog-title\"\n            >\n              <DialogTitle id=\"form-dialog-title\">New Project</DialogTitle>\n              <DialogContent>\n                <TextField\n                  autoFocus\n                  margin=\"dense\"\n                  id=\"name\"\n                  label=\"Project Name\"\n                  fullWidth\n                  onChange={handleChange}\n                />\n                <TextField\n                  margin=\"dense\"\n                  id=\"description\"\n                  label=\"Project Description\"\n                  fullWidth\n                  multiline\n                  onChange={handleChange}\n                />\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={handleClose} color=\"primary\">Cancel</Button>\n                <Button\n                  onClick={handleSubmit}\n                  color=\"primary\"\n                  disabled={projName === '' || projDesc === ''}\n                >\n                  Submit\n                </Button>\n              </DialogActions>\n            </Dialog>\n\n          </Grid>\n        </Grid>\n\n        <Grid item>\n          <Divider />\n        </Grid>\n\n        <Grid\n          container\n          item\n          direction=\"row\"\n          spacing={3}\n          justify=\"space-evenly\"\n          alignItems='center'\n        >\n          {projects.map ((project, index) => (\n            <Grid item key={index}>\n              <ProjectCard project={project} />\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const {projects} = state;\n  return {\n    projects: projects.data,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getProjects: () => dispatch (getAllProjectsAction ()),\n    addProject: (name, description) =>\n      dispatch (addNewProjectAction (name, description)),\n  };\n};\n\nexport default connect (mapStateToProps, mapDispatchToProps) (AllProjectsPage);\n","import React from 'react';\n\nimport {Route, Switch, Redirect} from 'react-router-dom';\n\nimport {connect} from 'react-redux';\n\nimport {makeStyles} from '@material-ui/core';\n\nimport ProjectDetailPage from './ProjectDetailPage';\nimport AllProjectsPage from './AllProjectsPage';\nimport {\n  setCurrentPage as setCurrentPageAction,\n} from '../actions/pageChangeActions';\n\nconst useStyles = makeStyles (theme => ({\n  root: {\n    flexGrow: 1,\n  },\n}));\n\nexport const ProjectsPageWrapper = props => {\n  const {isAuthenticated} = props;\n  const classes = useStyles ();\n\n  // const renderRedirect = () => {\n  //   if (!isAuthenticated) {\n  //     return <Redirect to=\"/login\" />;\n  //   }\n  // };\n\n  props.changePage (1);\n\n  if (!isAuthenticated) {\n    return <Redirect to=\"/login\" />;\n  } else {\n    return (\n      <section className={classes.root}>\n        <Switch>\n          <Route exact path=\"/projects\">\n            <AllProjectsPage />\n          </Route>\n          <Route\n            path=\"/projects/:project_id\"\n            children={({match}) => (\n              <ProjectDetailPage project_id={match.params.project_id} />\n            )}\n          />\n        </Switch>\n      </section>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  const {user} = state;\n  return {\n    isAuthenticated: user.info.token !== undefined,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changePage: index => dispatch (setCurrentPageAction (index)),\n  };\n};\n\nexport default connect (mapStateToProps, mapDispatchToProps) (\n  ProjectsPageWrapper\n);\n","import React from 'react';\nimport {Typography, ListItemIcon} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {connect} from 'react-redux';\nimport {\n  setCurrentPage as setCurrentPageAction,\n} from '../actions/pageChangeActions';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport {CheckCircleOutline} from '@material-ui/icons';\n\nconst useStyles = makeStyles (theme => ({\n  card: {\n    maxWidth: 700,\n    minWidth: 400,\n  },\n  media: {\n    height: 250,\n  },\n  root: {\n    \n  },\n  demo: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  title: {\n    margin: theme.spacing (4, 0, 2),\n  },\n}));\n\nexport function WelcomePage (props) {\n  const isAuthenticated = props.isAuthenticated;\n  const classes = useStyles ();\n\n  props.changePage (3);\n\n  \n  return (\n    <Grid\n      container\n      spacing={0}\n      direction=\"column\"\n      alignItems=\"center\"\n      justify=\"center\"\n      style={{minHeight: '100vh', marginLeft: isAuthenticated?0:-120}}\n    >\n      <Grid item>\n        <Card className={classes.card}>\n          <CardMedia\n            className={classes.media}\n            image=\"https://icon-library.net/images/man-png-icon/man-png-icon-2.jpg\"\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\">\n              Welcome to Arctic Thunder Metrics\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              With this application, you will be able to:\n            </Typography>\n              <div className={classes.demo}>\n                <List>\n                  <ListItem>\n                    <ListItemIcon>\n                      <CheckCircleOutline color=\"primary\"/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Add, edit, and delete the projects you want metrics for.\" />\n                  </ListItem>\n                  <ListItem>\n                    <ListItemIcon>\n                      <CheckCircleOutline color=\"primary\"/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Edit and delete your metrics.\" />\n                  </ListItem>\n                  <ListItem>\n                    <ListItemIcon>\n                      <CheckCircleOutline color=\"primary\"/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"View your metrics based upon the projects you have.\" />\n                  </ListItem>\n                  <ListItem>\n                    <ListItemIcon>\n                      <CheckCircleOutline color=\"primary\"/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"View the sample API.\" />\n                  </ListItem>\n                </List>\n              </div>\n          </CardContent>\n        </Card>\n      </Grid>\n    </Grid>\n  );\n}\n\n\n\n\nconst mapStateToProps = state => {\n  const {user} = state;\n  return {\n    isAuthenticated: user.info.token !== undefined,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changePage: index => dispatch (setCurrentPageAction (index)),\n  };\n};\n\nexport default connect (mapStateToProps, mapDispatchToProps) (WelcomePage);\n","import React, {useState} from 'react';\nimport {\n  Typography,\n  Divider,\n  TextField,\n  Button,\n  LinearProgress,\n  Fade,\n} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {logInUser as logInUserAction} from '../actions/userActions';\n\nconst useStyles = makeStyles (theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing (1),\n    marginRight: theme.spacing (1),\n  },\n  dense: {\n    marginTop: theme.spacing (1),\n  },\n  menu: {\n    width: 300,\n  },\n  button: {\n    margin: theme.spacing (1),\n  },\n  input: {\n    display: 'none',\n  },\n}));\n\nconst Login = props => {\n  const [username, setUsername] = useState ('');\n  const [password, setPassword] = useState ('');\n\n  const handleChange = event => {\n    switch (event.target.id) {\n      case 'usernameInput':\n        setUsername (event.target.value);\n        break;\n\n      case 'passwordInput':\n        setPassword (event.target.value);\n        break;\n\n      default:\n        console.log ('Received bad entry: ' + event.target.id);\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault ();\n    props.logInUser (username, password);\n    setUsername ('');\n    setPassword ('');\n  };\n\n  const renderRedirect = () => {\n    if (props.isAuthenticated) {\n      return <Redirect to=\"/dashboard\" />;\n    }\n  };\n\n  return (\n    <div>\n      {renderRedirect ()}\n      <Typography variant=\"h5\" align=\"left\">Login</Typography>\n      <Divider />\n      <TextField\n        id=\"usernameInput\"\n        label=\"Username\"\n        className={useStyles.textField}\n        name=\"email\"\n        margin=\"normal\"\n        variant=\"outlined\"\n        fullWidth\n        value={username}\n        onChange={handleChange}\n      />\n      <TextField\n        id=\"passwordInput\"\n        label=\"Password\"\n        className={useStyles.textField}\n        type=\"password\"\n        autoComplete=\"current-password\"\n        margin=\"normal\"\n        variant=\"outlined\"\n        fullWidth\n        value={password}\n        onChange={handleChange}\n      />\n      <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit} disabled={username === '' || password === ''}>\n        Login\n      </Button>\n      <Fade\n        in={props.loading}\n        style={{\n          transitionDelay: props.loading ? '800ms' : '0ms',\n        }}\n        unmountOnExit\n      >\n        <LinearProgress />\n      </Fade>\n    </div>\n  );\n};\n\n// Link Redux actions to dialog\nconst mapDispatchToProps = dispatch => ({\n  logInUser (username, password) {\n    dispatch (logInUserAction (username, password));\n  },\n});\n\n// Link Redux user object to dialog\nconst mapStateToProps = state => {\n  const {user} = state;\n  return {\n    user: user.info,\n    loading: user.loading,\n    error: user.error,\n    isAuthenticated: user.info.token !== undefined,\n  };\n};\n\nexport default connect (mapStateToProps, mapDispatchToProps) (Login);\n","import React, {Component} from 'react';\n\nimport {\n  TextField,\n  Divider,\n  Typography,\n  makeStyles,\n  withStyles,\n  Button,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles (theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing (1),\n    marginRight: theme.spacing (1),\n  },\n}));\n\nconst RegisterTextField = props => {\n  const {name, label, type, classes, handleChange, ...other} = props;\n  return (\n    <TextField\n      id={`${name}Input`}\n      label={label}\n      name={name}\n      type={type}\n      margin=\"normal\"\n      variant=\"outlined\"\n      fullWidth\n      onChange={handleChange}\n    />\n  );\n};\n\nclass Register extends React.Component {\n  constructor () {\n    super ();\n\n    this.state = {\n      email: '',\n      username: '',\n      password: '',\n      verifyPassword: '',\n      canlogin: false,\n    };\n\n    this.handleChange = this.handleChange.bind (this);\n  }\n\n  handleChange (event) {\n    switch (event.target.name) {\n      case 'usrName':\n        this.setState ({username: event.target.value, canlogin: event.target.value !== '' && this.state.email !== '' && this.state.password !== '' && this.state.verifyPassword !== '' && this.state.password === this.state.verifyPassword});\n        break;\n\n      case 'email':\n        this.setState ({email: event.target.value, canlogin: this.state.username !== '' && event.target.value !== '' && this.state.password !== '' && this.state.verifyPassword !== '' && this.state.password === this.state.verifyPassword});\n        break;\n\n      case 'password':\n        this.setState ({password: event.target.value, canlogin: this.state.username !== '' && this.state.email !== '' && event.target.value !== '' && this.state.verifyPassword !== '' && event.target.value === this.state.verifyPassword});\n        break;\n\n      case 'verifyPassword':\n        this.setState ({verifyPassword: event.target.value, canlogin: this.state.username !== '' && this.state.email !== '' && this.state.password !== '' && event.target.value !== '' && this.state.password === event.target.value});\n        break;\n\n      default:\n        console.log (`Error: ${event.target.name}`);\n        break;\n    }\n  }\n\n  render () {\n    return (\n      <div>\n        <Typography variant=\"h5\" align=\"left\">Set Up Your Account</Typography>\n        <Divider />\n        <RegisterTextField\n          name=\"usrName\"\n          label=\"Organization/User Name\"\n          classes={useStyles.textField}\n          handleChange={this.handleChange}\n        />\n        <RegisterTextField\n          name=\"email\"\n          label=\"Email\"\n          classes={useStyles.textField}\n          handleChange={this.handleChange}\n        />\n        <RegisterTextField\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          classes={useStyles.textField}\n          handleChange={this.handleChange}\n        />\n        <RegisterTextField\n          name=\"verifyPassword\"\n          label=\"Verify\"\n          type=\"password\"\n          classes={useStyles.textField}\n          handleChange={this.handleChange}\n        />\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          disabled={!this.state.canlogin}\n        >\n          Register\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default Register;\n","import React from 'react';\nimport {\n  Grid,\n  Button,\n  Typography,\n  makeStyles,\n  Link,\n  Card,\n  CardContent,\n} from '@material-ui/core';\n\nimport {Switch, Route, Link as RouterLink} from 'react-router-dom';\n\nimport Login from '../components/Login';\nimport Register from '../components/Register';\n\nconst useStyles = makeStyles (theme => ({\n  root: {\n    flexGrow: 1,\n    marginLeft: -240,\n  },\n  textField: {\n    marginLeft: theme.spacing (1),\n    marginRight: theme.spacing (1),\n  },\n  card: {\n    maxWidth: 500,\n    minWidth: 275,\n  },\n}));\n\nexport default function LoginPage () {\n  const classes = useStyles ();\n\n  return (\n    <div className={classes.root}>\n      <Switch>\n        <Route exact path={['/', '/login']}>\n          <Grid\n            container\n            spacing={2}\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            style={{minHeight: '75vh'}}\n          >\n            <Grid item>\n              <Typography variant=\"h4\">Arctic Thunder</Typography>\n            </Grid>\n\n            <Grid item>\n              <Card className={classes.card}>\n                <CardContent>\n                  <Login />\n                </CardContent>\n              </Card>\n            </Grid>\n\n            <Grid item>\n              <Typography>Don't have an account?</Typography>\n              <Link underline=\"none\" to={`/register`} component={RouterLink}>\n                <Button variant=\"outlined\">Sign Up</Button>\n              </Link>\n            </Grid>\n          </Grid>\n        </Route>\n\n        <Route exact path=\"/register\">\n          <Grid\n            container\n            spacing={2}\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            style={{minHeight: '75vh'}}\n          >\n            <Grid item>\n              <Typography variant=\"h4\">\n                Thanks For Choosing Arctic Thunder!\n              </Typography>\n            </Grid>\n            <Grid item>\n              <Card className={classes.card}>\n                <CardContent>\n                  <Register />\n                </CardContent>\n              </Card>\n            </Grid>\n\n            <Grid item>\n              <Typography>Already have an accout?</Typography>\n              <Link underline=\"none\" to={`/login`} component={RouterLink}>\n                <Button variant=\"outlined\">Login</Button>\n              </Link>\n            </Grid>\n          </Grid>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport {Route, Switch} from 'react-router-dom';\n\nimport {makeStyles, CssBaseline} from '@material-ui/core';\n\nimport MenuBar from '../components/MenuBar';\nimport SidePanel from '../components/SidePanel';\nimport ApiPage from './ApiPage';\nimport DashboardPage from './DashboardPage';\nimport ProjectsPageWrapper from './ProjectsPageWrapper';\nimport WelcomePage from './WelcomePage';\nimport LoginPage from './LoginPage';\n\nconst useStyles = makeStyles (theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing (2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing (3),\n  },\n  toolbar: theme.mixins.toolbar,\n}));\n\nexport default function MainPage () {\n  const classes = useStyles ();\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <MenuBar />\n      <SidePanel />\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Switch>\n          <Route exact path={['/', '/login', '/register']}>\n            <LoginPage />\n          </Route>\n          <Route path=\"/dashboard\">\n            <DashboardPage />\n          </Route>\n          <Route path=\"/projects\">\n            <ProjectsPageWrapper />\n          </Route>\n          <Route path=\"/api\">\n            <ApiPage />\n          </Route>\n          <Route path=\"/about\">\n            <WelcomePage />\n          </Route>\n        </Switch>\n      </main>\n    </div>\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport MainPage from './pages/Main';\nimport {HashRouter} from 'react-router-dom';\n\nfunction App () {\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        <MainPage />\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export default {\n  user: {\n    info: {\n      // //TODO: REMOVE ME - Hard-code credentials to avoid login during development\n      username: 'cscimetrics',\n      token: '14efc2dfbc44ef2b711e68b24906698939ee49ed',\n    },\n    loading: false,\n    error: null,\n  },\n  projects: {\n    data: [],\n    loading: false,\n    error: null,\n  },\n  metrics: {\n    data: [],\n    loading: false,\n    error: null,\n  },\n  currentPage: {\n    index: 0,\n  },\n};\n","import {user as type} from '../actions/actionTypes';\nimport initialState from './initialState';\n\nexport const userReducer = (state = initialState.user, action) => {\n  switch (action.type) {\n    case type.LOG_IN_LOADING:\n      return Object.assign ({}, state, {loading: true});\n    case type.LOG_IN_FAILURE:\n      return Object.assign ({}, state, {\n        loading: false,\n        error: action.payload.error,\n      });\n    case type.LOG_IN_SUCCESS:\n      return Object.assign ({}, state, {\n        loading: false,\n        error: null,\n        info: action.payload.userData,\n      });\n    case type.LOG_OUT_SUCCESS:\n      return Object.assign ({}, state, initialState.user);\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import {project as types} from '../actions/actionTypes';\nimport initialState from './initialState';\n\nconst removeProject = (arr, target) => {\n  const index = arr.findIndex (project => project.equals (target));\n  return arr.splice (index, 1);\n};\n\nexport default function projectReducer (state = initialState.projects, action) {\n  switch (action.type) {\n    // Get all projects\n    case types.GET_ALL_PROJECTS_LOADING:\n      return Object.assign ({}, state, {loading: true});\n    case types.GET_ALL_PROJECTS_FAILURE:\n      return Object.assign ({}, state, {\n        loading: false,\n        error: action.payload.error,\n      });\n    case types.GET_ALL_PROJECTS_SUCCESS:\n      return Object.assign ({}, state, {\n        loading: false,\n        error: null,\n        data: action.payload.projects,\n      });\n    // Get specific project\n    case types.GET_PROJECT_LOADING:\n      return Object.assign ({}, state, {loading: true});\n    case types.GET_PROJECT_FAILURE:\n      return Object.assign ({}, state, {\n        loading: false,\n        error: action.payload.error,\n      });\n    case types.GET_PROJECT_SUCCESS:\n      return Object.assign ({}, state, {\n        loading: false,\n        error: null,\n        data: [...state.data, action.payload.project],\n      });\n    // Create New Project\n    case types.CREATE_PROJECT_LOADING:\n      return Object.assign ({}, state, {loading: true});\n    case types.CREATE_PROJECT_FAILURE:\n      return Object.assign ({}, state, {\n        loading: false,\n        error: action.payload.error,\n      });\n    case types.CREATE_PROJECT_SUCCESS:\n      return Object.assign ({}, state, {\n        loading: false,\n        error: null,\n        data: [...state.data, action.payload.project],\n      });\n    // Delete Project\n    case types.DELETE_PROJECT_LOADING:\n      return Object.assign ({}, state, {loading: true});\n    case types.DELETE_PROJECT_FAILURE:\n      return Object.assign ({}, state, {\n        loading: false,\n        error: action.payload.error,\n      });\n    case types.DELETE_PROJECT_SUCCESS:\n      return Object.assign ({}, state, {\n        loading: false,\n        error: null,\n        data: removeProject ([...state], action.payload.project),\n      });\n    default:\n      return state;\n  }\n}\n","import {combineReducers} from 'redux';\nimport user from './userReducer';\nimport projects from './projectReducer';\nimport currentPage from './pageChangeReducer';\n\nconst rootReducer = combineReducers ({\n  user,\n  projects,\n  currentPage,\n});\n\nexport default rootReducer;\n","import {currentPage as types} from '../actions/actionTypes';\nimport initialState from './initialState';\n\nexport default function pageChangeReducer (\n  state = initialState.currentPage,\n  action\n) {\n  switch (action.type) {\n    case types.PAGE_CHANGED:\n      return Object.assign ({}, state, {index: action.payload.index});\n    default:\n      return state;\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport configureStore from './store/configureStore';\n\nconst store = configureStore ();\nconst unsubscribe = store.subscribe (() => console.log (store.getState ()));\n\nReactDOM.render (\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById ('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister ();\n","import {createStore, applyMiddleware} from 'redux';\nimport rootReducer from '../reducers/rootReducer';\nimport thunk from 'redux-thunk';\n\nexport default function configureStore () {\n  return createStore (rootReducer, applyMiddleware (thunk));\n}\n"],"sourceRoot":""}